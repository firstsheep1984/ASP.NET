@using AdmissionsOnlineSystem.Helpers
@using AdmissionsOnlineSystem.Models
@model AdmissionsOnlineSystem.ViewModels.ApplicationViewModel
<br />
@{
    bool isReadOnly = User.IsInRole(RoleName.CanManage);
}
@using (Ajax.BeginForm("Edit", "Applications", new AjaxOptions() { HttpMethod = "POST", OnSuccess = "OnPersonalInfoSuccess" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ApplicationId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ApplicationId, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control" } })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control" } })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, isReadOnly ? (object)new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } } : (object)new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, isReadOnly ? (object)new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } } : (object)new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TelePhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TelePhoneNumber, isReadOnly ? (object)new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } } : (object)new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TelePhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DepartmentId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.DepartmentId, (SelectList)ViewBag.DepartmentList, new { @class = "form-control" })

            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ProgramId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ProgramId, (SelectList)ViewBag.ProgramList, new { @class = "form-control" })

            </div>
        </div>
        @if (!User.IsInRole(RoleName.CanManage))
        {
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        }
    </div>
}

@Html.Script(
@<script type="text/javascript">
        $(document).ready(function () {
            $("#DepartmentId").change(function () {
                var selectedItemValue = $(this).val();
                var ddlPrograms = $("#ProgramId");
                $.ajax({
                    cache: false,
                    type: "GET",
                    url: '@Url.Action("GetProgramsByDepartmentId", "Applications")',
                    data: { "id": selectedItemValue },
                    success: function (data) {
                        ddlPrograms.html('');
                        $.each(data, function (id, option) {
                            ddlPrograms.append($('<option></option>').val(option.id).html(option.name));
                        });
                    }
                });
            });
        });
        function OnPersonalInfoSuccess(data) {
            alert('The personal information has been saved successfully.')
        }
</script>)